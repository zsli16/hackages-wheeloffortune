{"ast":null,"code":"import _objectWithoutProperties from \"/Users/suli/Documents/Private/hackages-wheeloffortune/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/suli/Documents/Private/hackages-wheeloffortune/client/src/components/wheel.js\";\nimport React from 'react';\nimport './wheel.css';\n\nconst style = (degrees, color, index) => ({\n  transform: \"rotate(\".concat(degrees, \"deg)\"),\n  'WebkitTransform': \"rotate(\".concat(degrees, \"deg)\"),\n  'MozTransform': \"rotate(\".concat(degrees, \"deg)\"),\n  'OTransform': \"rotate(\".concat(degrees, \"deg)\"),\n  'msTransform': \"rotate(\".concat(degrees, \"deg)\"),\n  'borderColor': \"\".concat(color, \" transparent\"),\n  'zIndex': 100 - index\n});\n\nfunction renderWheel(participants) {\n  return participants.map((participant, index, allParticipants) => {\n    let colors = ['rgb(26, 188, 156)', 'rgb(46, 204, 113)', 'rgb(52, 152, 219)', 'rgb(155, 89, 182)', 'rgb(52, 73, 94)', 'rgb(22, 160, 133)', 'rgb(39, 174, 96)', 'rgb(41, 128, 185)', 'rgb(142, 68, 173)', 'rgb(44, 62, 80)', 'rgb(241, 196, 15)', 'rgb(230, 126, 34)', 'rgb(231, 76, 60)', 'rgb(236, 240, 241)', 'rgb(149, 165, 166)', 'rgb(243, 156, 18)', 'rgb(211, 84, 0)', 'rgb(192, 57, 43)', 'rgb(189, 195, 199)', 'rgb(127, 140, 141)'];\n    let color = colors[index % colors.length];\n    const degree = index / allParticipants.length * 360;\n    console.log(participant.name, degree);\n    return React.createElement(\"div\", {\n      className: \"sec\",\n      key: participant.name,\n      style: style(degree, color, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, participant.name));\n  });\n}\n\nconst spinStyle = (winnerNumber, participants) => {\n  let degree;\n\n  if (winnerNumber >= 0) {\n    degree = -(winnerNumber / participants.length * 360 + 360 * 6);\n  } else {\n    degree = 0;\n  }\n\n  return {\n    transform: \"rotate(\".concat(degree, \"deg)\")\n  };\n};\n\nconst Wheel = (_ref) => {\n  let participants = _ref.participants,\n      winnerNumber = _ref.winnerNumber,\n      props = _objectWithoutProperties(_ref, [\"participants\", \"winnerNumber\"]);\n\n  return React.createElement(\"div\", {\n    id: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wheel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: spinStyle(winnerNumber, participants),\n    id: \"inner-wheel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, renderWheel(participants)), React.createElement(\"div\", {\n    onClick: props.generateWinner,\n    id: \"spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"inner-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"logo\",\n    alt: \"logo\",\n    src: \"hackages-teal.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"shine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"txt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/suli/Documents/Private/hackages-wheeloffortune/client/src/components/wheel.js"],"names":["React","style","degrees","color","index","transform","renderWheel","participants","map","participant","allParticipants","colors","length","degree","console","log","name","spinStyle","winnerNumber","Wheel","props","generateWinner"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './wheel.css';\n\nconst style = (degrees, color, index) => ({\n\ttransform: `rotate(${degrees}deg)`,\n\t'WebkitTransform': `rotate(${degrees}deg)`,\n\t'MozTransform': `rotate(${degrees}deg)`,\n\t'OTransform': `rotate(${degrees}deg)`,\n\t'msTransform': `rotate(${degrees}deg)`,\n  'borderColor': `${color} transparent`,\n  'zIndex': 100 - index\t\n})\n\nfunction renderWheel(participants) {\n  return participants.map((participant, index, allParticipants) => {\n  let colors = [ 'rgb(26, 188, 156)', 'rgb(46, 204, 113)', 'rgb(52, 152, 219)', 'rgb(155, 89, 182)', 'rgb(52, 73, 94)', 'rgb(22, 160, 133)', 'rgb(39, 174, 96)', 'rgb(41, 128, 185)', 'rgb(142, 68, 173)', 'rgb(44, 62, 80)', 'rgb(241, 196, 15)', 'rgb(230, 126, 34)', 'rgb(231, 76, 60)', 'rgb(236, 240, 241)', 'rgb(149, 165, 166)', 'rgb(243, 156, 18)', 'rgb(211, 84, 0)', 'rgb(192, 57, 43)', 'rgb(189, 195, 199)', 'rgb(127, 140, 141)']\n  let color = colors[index%colors.length]\n    const degree = index / allParticipants.length * 360\n    console.log(participant.name, degree)\n    return (\n      <div className=\"sec\" key={participant.name} style={style(degree, color, index)}><span className=\"name\">{participant.name}</span></div>\n    )\n  })\n}\n\nconst spinStyle = (winnerNumber, participants) => {\n  let degree;\n  if (winnerNumber >= 0) {\n    degree = -((winnerNumber / participants.length * 360) + 360 * 6)\n  } else {\n   degree = 0\n  }\n  return {\n  transform: `rotate(${degree}deg)`\n}}\n\nconst Wheel = ({participants, winnerNumber, ...props}) => {\n  return (\n    <div id=\"wrapper\">\n            \n            <div id=\"wheel\">\n                <div style={spinStyle(winnerNumber, participants)} id=\"inner-wheel\">\n                    {renderWheel(participants)}\n                </div>       \n               \n                <div onClick={props.generateWinner} id=\"spin\">\n                    <div id=\"inner-spin\"><img id=\"logo\" alt=\"logo\" src=\"hackages-teal.svg\"/></div>\n                </div>\n                \n                <div id=\"shine\"></div>\n            </div>\n            \n            <div id=\"txt\"></div>\n      </div>\n  )\n}\n\nexport default Wheel;\n\n\n"]},"metadata":{},"sourceType":"module"}