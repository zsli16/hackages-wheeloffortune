{"ast":null,"code":"import _objectWithoutProperties from \"/Users/suli/Documents/Private/hackages-wheeloffortune/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/suli/Documents/Private/hackages-wheeloffortune/client/src/components/wheel.js\";\nimport React from 'react';\nimport './wheel.css';\n\nconst style = (degrees, color) => ({\n  transform: \"rotate(\".concat(degrees, \"deg)\"),\n  '-webkit-transform': \"rotate(\".concat(degrees, \"deg)\"),\n  '-moz-transform': \"rotate(\".concat(degrees, \"deg)\"),\n  '-o-transform': \"rotate(\".concat(degrees, \"deg)\"),\n  '-ms-transform': \"rotate(\".concat(degrees, \"deg)\"),\n  'border-color': \"\".concat(color, \" transparent\")\n});\n\nfunction renderWheel(participants) {\n  return participants.map((participant, index, allParticipants) => {\n    let color = '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n    const degree = index / allParticipants.length * 360;\n    return React.createElement(\"div\", {\n      className: \"sec\",\n      style: style(degree, color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, participant.name));\n  });\n}\n\nconst spinStyle = (winnerNumber, participants) => {\n  let degree;\n\n  if (winnerNumber >= 0) {\n    degree = -(winnerNumber / participants.length * 360 + 360 * 6);\n  } else {\n    degree = 0;\n  }\n\n  return {\n    transform: \"rotate(\".concat(degree, \"deg)\")\n  };\n};\n\nconst Wheel = (_ref) => {\n  let participants = _ref.participants,\n      winnerNumber = _ref.winnerNumber,\n      props = _objectWithoutProperties(_ref, [\"participants\", \"winnerNumber\"]);\n\n  return React.createElement(\"div\", {\n    id: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wheel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: spinStyle(winnerNumber, participants),\n    id: \"inner-wheel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, renderWheel(participants)), React.createElement(\"div\", {\n    onClick: props.generateWinner,\n    id: \"spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"inner-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"logo\",\n    alt: \"logo\",\n    src: \"hackages-teal.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"shine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"txt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nexport default Wheel;","map":{"version":3,"sources":["/Users/suli/Documents/Private/hackages-wheeloffortune/client/src/components/wheel.js"],"names":["React","style","degrees","color","transform","renderWheel","participants","map","participant","index","allParticipants","Math","random","toString","degree","length","name","spinStyle","winnerNumber","Wheel","props","generateWinner"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,CAACC,OAAD,EAAUC,KAAV,MAAqB;AAClCC,EAAAA,SAAS,mBAAYF,OAAZ,SADyB;AAElC,wCAA+BA,OAA/B,SAFkC;AAGlC,qCAA4BA,OAA5B,SAHkC;AAIlC,mCAA0BA,OAA1B,SAJkC;AAKlC,oCAA2BA,OAA3B,SALkC;AAMlC,4BAAmBC,KAAnB;AANkC,CAArB,CAAd;;AASA,SAASE,WAAT,CAAqBC,YAArB,EAAmC;AACjC,SAAOA,YAAY,CAACC,GAAb,CAAiB,CAACC,WAAD,EAAcC,KAAd,EAAqBC,eAArB,KAAyC;AAEjE,QAAIP,KAAK,GAAG,MAAI,CAACQ,IAAI,CAACC,MAAL,KAAc,QAAd,IAAwB,CAAzB,EAA4BC,QAA5B,CAAqC,EAArC,CAAhB;AACE,UAAMC,MAAM,GAAGL,KAAK,GAAGC,eAAe,CAACK,MAAxB,GAAiC,GAAhD;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAEd,KAAK,CAACa,MAAD,EAASX,KAAT,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBK,WAAW,CAACQ,IAApC,CAAlD,CADF;AAGD,GAPM,CAAP;AAQD;;AAED,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAeZ,YAAf,KAAgC;AAChD,MAAIQ,MAAJ;;AACA,MAAII,YAAY,IAAI,CAApB,EAAuB;AACrBJ,IAAAA,MAAM,GAAG,EAAGI,YAAY,GAAGZ,YAAY,CAACS,MAA5B,GAAqC,GAAtC,GAA6C,MAAM,CAArD,CAAT;AACD,GAFD,MAEO;AACND,IAAAA,MAAM,GAAG,CAAT;AACA;;AACD,SAAO;AACPV,IAAAA,SAAS,mBAAYU,MAAZ;AADF,GAAP;AAEA,CATF;;AAWA,MAAMK,KAAK,GAAG,UAA4C;AAAA,MAA1Cb,YAA0C,QAA1CA,YAA0C;AAAA,MAA5BY,YAA4B,QAA5BA,YAA4B;AAAA,MAAXE,KAAW;;AACxD,SACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAEH,SAAS,CAACC,YAAD,EAAeZ,YAAf,CAArB;AAAmD,IAAA,EAAE,EAAC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,WAAW,CAACC,YAAD,CADhB,CADJ,EAKI;AAAK,IAAA,OAAO,EAAEc,KAAK,CAACC,cAApB;AAAoC,IAAA,EAAE,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,GAAG,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADJ,CALJ,EASI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFR,EAcQ;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdR,CADF;AAkBD,CAnBD;;AAqBA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport './wheel.css';\n\nconst style = (degrees, color) => ({\n\ttransform: `rotate(${degrees}deg)`,\n\t'-webkit-transform': `rotate(${degrees}deg)`,\n\t'-moz-transform': `rotate(${degrees}deg)`,\n\t'-o-transform': `rotate(${degrees}deg)`,\n\t'-ms-transform': `rotate(${degrees}deg)`,\n\t'border-color': `${color} transparent`,\t\n})\n\nfunction renderWheel(participants) {\n  return participants.map((participant, index, allParticipants) => {\n  \n  let color = '#'+(Math.random()*0xFFFFFF<<0).toString(16);\n    const degree = index / allParticipants.length * 360\n    return (\n      <div className=\"sec\" style={style(degree, color)}><span className=\"name\">{participant.name}</span></div>\n    )\n  })\n}\n\nconst spinStyle = (winnerNumber, participants) => {\n  let degree;\n  if (winnerNumber >= 0) {\n    degree = -((winnerNumber / participants.length * 360) + 360 * 6)\n  } else {\n   degree = 0\n  }\n  return {\n  transform: `rotate(${degree}deg)`\n}}\n\nconst Wheel = ({participants, winnerNumber, ...props}) => {\n  return (\n    <div id=\"wrapper\">\n            \n            <div id=\"wheel\">\n                <div style={spinStyle(winnerNumber, participants)} id=\"inner-wheel\">\n                    {renderWheel(participants)}\n                </div>       \n               \n                <div onClick={props.generateWinner} id=\"spin\">\n                    <div id=\"inner-spin\"><img id=\"logo\" alt=\"logo\" src=\"hackages-teal.svg\"/></div>\n                </div>\n                \n                <div id=\"shine\"></div>\n            </div>\n            \n            <div id=\"txt\"></div>\n      </div>\n  )\n}\n\nexport default Wheel;\n\n\n"]},"metadata":{},"sourceType":"module"}